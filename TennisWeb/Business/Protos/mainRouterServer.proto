syntax = "proto3";
package stream;
 
// Service
service mainRouterServer {
  rpc detectCourtLinesController(detectCourtLinesRequestData) returns (LinesResponseData) {}
  rpc gameObservationController(gameObservationRequestData) returns (gameObservationControllerResponse) {}
  rpc getProducerThreads(requestData) returns (responseData) {}
  rpc stopProduce(requestData) returns (responseData) {}
  rpc stopAllProducerThreads(requestData) returns (responseData) {}
  rpc getRunningConsumers(requestData) returns (responseData) {}
  rpc stopRunningConsumer(requestData) returns (responseData) {}
  rpc stopAllRunningConsumers(requestData) returns (responseData) {}
}

//Request
message requestData {
  string data=1;
}

message detectCourtLinesRequestData{
  int64 id=1;
  bool force=2;
}

message gameObservationRequestData{
  int64 id=1;
  int64 limit=2;
  int64 aosTypeId=3;
  int64 playerId=4;
  int64 courtId=5;
}

// Response Array
message responseData{
  bytes data=1;
}


message point{
  float x=1;
  float y=2;
}

message gameObservationControllerResponse{
  int32 score=1;
  repeated point fallPoints=2;
  string frame=3;
}


// Array Structure
message number {
  float data = 1 ;
}
message line {
  repeated number items = 1;
}
message linePackage {
  repeated line items = 1;
  
}
message LinesResponseData{
  linePackage lines = 1;
  string frame=2;
}